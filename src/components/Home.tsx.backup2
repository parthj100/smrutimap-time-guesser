import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { Button } from '@/components/ui/button';
import { Play, Calendar, GraduationCap, Camera, Trophy, MessageSquare, Users } from 'lucide-react';
import EnhancedButton from './EnhancedButton';
import { UserHeader } from './UserHeader';
import { Leaderboard } from './Leaderboard';
import { FeedbackForm } from './FeedbackForm';
import { useBreakpoint } from '@/hooks/useResponsive';

interface HomeProps {
  onPlayClick?: () => void;
  onDailyChallengeClick?: () => void;
  onTutorialClick?: () => void;
  onMultiplayerClick?: () => void;
}

export const Home: React.FC<HomeProps> = ({
  onPlayClick,
  onDailyChallengeClick,
  onTutorialClick,
  onMultiplayerClick
}) => {
  const navigate = useNavigate();
  const [showLeaderboard, setShowLeaderboard] = useState(false);
  const [showFeedbackForm, setShowFeedbackForm] = useState(false);
  const [isVisible, setIsVisible] = useState(false);
  const { isMobile, isTablet } = useBreakpoint();

  useEffect(() => {
    // Trigger fade-in effect immediately when component mounts
    const timer = setTimeout(() => {
      setIsVisible(true);
    }, 100);

    return () => clearTimeout(timer);
  }, []);

  const handlePlayClick = () => {
    if (onPlayClick) {
      onPlayClick();
    }
  };

  const handleDailyChallengeClick = () => {
    if (onDailyChallengeClick) {
      onDailyChallengeClick();
    }
  };

  const handleTutorialClick = () => {
    if (onTutorialClick) {
      onTutorialClick();
    }
  };

  const handleMultiplayerClick = () => {
    if (onMultiplayerClick) {
      onMultiplayerClick();
    }
  };

  const handleSubmitPhotosClick = () => {
    navigate('/submit-photos');
  };

  // Animation timing
  const fadeInDelays = {
    logo: 0,
    title: 200,
    buttons: 400
  };

  return (
    <div className="relative flex flex-col items-center justify-center h-screen w-full">
      {/* Corner Buttons - Mobile-Optimized Layout */}
      {isMobile ? (
        // Mobile: Single row at top with compact buttons
        <motion.div 
          className="fixed top-4 left-4 right-4 z-50 flex justify-between items-center"
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, ease: "easeOut", delay: 0.6 }}
        >
          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <Button
              onClick={() => setShowLeaderboard(true)}
              variant="outline"
              size="sm"
              className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 rounded-full min-h-[44px] px-3 py-2"
            >
              <Trophy size={16} />
            </Button>
          </motion.div>
          
          <div className="flex gap-2">
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button
                onClick={() => setShowFeedbackForm(true)}
                variant="outline"
                size="sm"
                className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 rounded-full min-h-[44px] px-3 py-2"
              >
                <MessageSquare size={16} />
              </Button>
            </motion.div>
            
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button
                onClick={handleSubmitPhotosClick}
                variant="outline"
                size="sm"
                className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 rounded-full min-h-[44px] px-3 py-2"
              >
                <Camera size={16} />
              </Button>
            </motion.div>
          </div>
        </motion.div>
      ) : (
        // Desktop: Original corner positioning
        <>
          <motion.div 
            className="fixed top-6 left-6 z-50"
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6, ease: "easeOut", delay: 0.6 }}
          >
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button
                onClick={() => setShowLeaderboard(true)}
                variant="outline"
                className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 flex items-center gap-2 rounded-full px-4 py-2 shadow-lg hover:shadow-xl"
              >
                <Trophy size={18} />
                Leaderboard
              </Button>
            </motion.div>
          </motion.div>

          <motion.div 
            className="fixed bottom-6 left-6 z-50"
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6, ease: "easeOut", delay: 0.7 }}
          >
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button
                onClick={handleSubmitPhotosClick}
                variant="outline"
                className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 flex items-center gap-2 rounded-full px-4 py-2 shadow-lg hover:shadow-xl"
              >
                <Camera size={18} />
                Submit Photos
              </Button>
            </motion.div>
          </motion.div>

          <motion.div 
            className="fixed bottom-6 right-6 z-50"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.6, ease: "easeOut", delay: 0.8 }}
          >
            <motion.div
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button
                onClick={() => setShowFeedbackForm(true)}
                variant="outline"
                className="bg-white/90 backdrop-blur-sm border-[#ea384c] text-[#ea384c] hover:bg-[#ea384c] hover:text-white transition-all duration-300 flex items-center gap-2 rounded-full px-4 py-2 shadow-lg hover:shadow-xl"
              >
                <MessageSquare size={18} />
                Feedback
              </Button>
            </motion.div>
          </motion.div>
        </>
      )}

      {/* User Header - Mobile-aware positioning */}
      <div className={`${isMobile ? 'fixed top-4 right-4 z-40' : ''}`}>
        <UserHeader onShowLeaderboard={() => setShowLeaderboard(true)} />
      </div>
      
      {/* Main Content - Mobile-Optimized */}
      <div className={`relative z-10 flex flex-col items-center justify-center flex-1 w-full ${
        isMobile ? 'pt-20 pb-8 px-6' : 'mb-16'
      }`}>
        <div className={`flex flex-col items-center w-full ${isMobile ? 'max-w-sm' : 'mb-4'}`}>
          {/* Logo - Mobile-Responsive Size */}
          <motion.div
            initial={{ opacity: 0, y: 30, scale: 0.9 }}
            animate={{ opacity: 1, y: 0, scale: 1 }}
            transition={{ duration: 0.8, ease: "easeOut", delay: 0 }}
          >
            <img 
              src="/smuritmap-logo.png" 
              alt="SmrutiMap Icon" 
              className={`${isMobile ? 'w-20 h-20 mb-3' : 'w-48 h-48 mb-6'} drop-shadow-2xl`}
            />
          </motion.div>
          
          {/* Title - Mobile-Responsive Size */}
          <motion.div 
            className={`text-[#ea384c] font-bold tracking-tighter leading-none drop-shadow-2xl text-shadow-lg text-center ${
              isMobile ? 'text-3xl mb-8' : 'text-[10rem] mb-8'
            }`}
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, ease: "easeOut", delay: 0.2 }}
          >
            SMRUTIMAP
          </motion.div>
          
          {/* All Buttons - Mobile-Optimized Layout */}
          <motion.div 
            className={`flex flex-col items-center w-full ${isMobile ? 'gap-4' : 'max-w-5xl gap-6'}`}
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, ease: "easeOut", delay: 0.4 }}
          >
            {/* Main Game Buttons Row - Play and Daily Challenge side by side */}
            <div className={`flex w-full ${isMobile ? 'flex-col gap-3' : 'justify-center items-center gap-6'}`}>
              <EnhancedButton 
                onClick={handlePlayClick} 
                animationType="scale"
                className={`bg-[#ea384c] hover:bg-red-600 transition-colors flex items-center justify-center gap-3 rounded-full text-white font-bold drop-shadow-xl shadow-lg hover:shadow-xl ${
                  isMobile 
                    ? 'px-8 py-4 text-lg min-h-[56px] w-full' 
                    : 'px-16 py-6 text-2xl min-w-[280px]'
                }`}
              >
                <Play size={isMobile ? 20 : 32} />
                Play
              </EnhancedButton>
              
              <EnhancedButton 
                onClick={handleDailyChallengeClick} 
                animationType="scale"
                className={`bg-orange-500 hover:bg-orange-600 transition-colors flex items-center justify-center gap-3 rounded-full text-white font-bold drop-shadow-xl shadow-lg hover:shadow-xl ${
                  isMobile 
                    ? 'px-8 py-4 text-lg min-h-[56px] w-full' 
                    : 'px-16 py-6 text-2xl min-w-[280px]'
                }`}
              >
                <Calendar size={isMobile ? 20 : 32} />
                Daily Challenge
              </EnhancedButton>
            </div>

            {/* Tutorial Button - Centered below main buttons */}
            <div 
              className="flex justify-center w-full"
              style={{
                opacity: isVisible ? 1 : 0,
                transform: isVisible ? 'translateY(0)' : 'translateY(30px)',
                transition: `opacity 0.8s ease-out ${fadeInDelays.buttons + 400}ms, transform 0.8s ease-out ${fadeInDelays.buttons + 400}ms`,
              }}
            >
              <EnhancedButton 
                onClick={handleTutorialClick} 
                animationType="scale"
                className={`bg-blue-500 hover:bg-blue-600 transition-colors flex items-center justify-center gap-2 rounded-full text-white font-medium drop-shadow-xl shadow-lg hover:shadow-xl border-2 border-blue-400 ${
                  isMobile 
                    ? 'px-6 py-3 text-base min-h-[52px] w-4/5' 
                    : 'px-12 py-4 text-lg min-w-[280px]'
                }`}
              >
                <GraduationCap size={isMobile ? 18 : 24} />
                {isMobile ? 'Tutorial' : 'Learn How to Play'}
              </EnhancedButton>
            </div>
          </motion.div>
        </div>
      </div>
      
      {/* Modals */}
      <Leaderboard 
        isOpen={showLeaderboard} 
        onClose={() => setShowLeaderboard(false)} 
      />

      <FeedbackForm 
        isOpen={showFeedbackForm} 
        onClose={() => setShowFeedbackForm(false)} 
      />
    </div>
  );
};
